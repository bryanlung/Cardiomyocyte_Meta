## Please download all data from link provided in Table S1

set.seed(124)

library(Seurat)
library(qs)


## Dataset Curation and Loading in R

# Chaffin et al.

Chaffin <- Read10X(data.dir = "/home/bryanl/scratch/scRNA_meta/Chaffin/SCP1303/expression/614a0209771a5b0d7f03370f/")
Chaffin <- CreateSeuratObject(counts = Chaffin, project = "Chaffin", min.cells = 3, min.features = 200)
metadata_Chaffin <- read.delim("/home/bryanl/scratch/scRNA_meta/Chaffin/SCP1303/metadata/DCM_HCM_MetaData_V1.txt")
metadata_Chaffin <- metadata_Chaffin[-1, ]
rownames(metadata_Chaffin) <- metadata_Chaffin$NAME
metadata_Chaffin$NAME <- NULL
Chaffin <- AddMetaData(Chaffin, metadata = metadata_Chaffin)
Chaffin_CMs <- subset(Chaffin, subset = cell_type__ontology_label == "cardiac muscle cell")
Chaffin_CMs@meta.data$Dataset <- "Chaffin et al." 
Chaffin_CMs@meta.data$Sex[Chaffin_CMs@meta.data$sex == "male"] <- "Male"
Chaffin_CMs@meta.data$Sex[Chaffin_CMs@meta.data$sex == "female"] <- "Female"
Chaffin_CMs@meta.data$Conditions[Chaffin_CMs@meta.data$disease__ontology_label == "normal"] <- "Healthy CMs"
Chaffin_CMs@meta.data$Conditions[Chaffin_CMs@meta.data$disease__ontology_label == "hypertrophic cardiomyopathy"] <- "HCM CMs"
Chaffin_CMs@meta.data$Conditions[Chaffin_CMs@meta.data$disease__ontology_label == "dilated cardiomyopathy"] <- "DCM CMs"
Chaffin <- Chaffin_CMs
qsave(Chaffin, "/home/bryanl/scratch/scRNA_meta/Chaffin/Chaffin_CMs.qs") 

# Feng et al.

Feng <- Read10X(data.dir = "/home/bryanl/scratch/scRNA_meta/Feng/10X_file/", gene.column = 1)
Feng <- CreateSeuratObject(counts = Feng, project = "Feng", min.cells = 3, min.features = 200)
metadata_Feng <- read.csv("/home/bryanl/scratch/scRNA_meta/Feng/GSE163619_GEO_FACs-sorted_metadata.csv", header = FALSE)
colnames(metadata_Feng) <- metadata_Feng[1, ]
metadata_Feng <- metadata_Feng[-1, ]
rownames(metadata_Feng) <- metadata_Feng$barcodes
metadata_Feng$barcodes <- NULL
Feng <- AddMetaData(Feng, metadata = metadata_Feng)
Feng@meta.data$Fine_Conditions[Feng@meta.data$treatment == "RA+"] <- "Immature Atrial hiPSC-CM derived Organoids" 
Feng@meta.data$Fine_Conditions[Feng@meta.data$treatment == "RA-"] <- "Immature Ventricular hiPSC-CM derived Organoids" 
Feng@meta.data$Conditions <- "Immature hiPSC-CM derived Organoids"
Feng@meta.data$Dataset <- "Feng et al."
Feng@meta.data$Sex <- "Undefined"
qsave(Feng, "/home/bryanl/scratch/scRNA_meta/Feng/Feng_Organoids.qs") 

# Funakoshi et al.

D20_VCM <- Read10X(data.dir= "/home/bryanl/scratch/scRNA_meta/Funakoshi/D20_VCM/")
D20_VCM <- CreateSeuratObject(counts = D20_VCM, project = "D20_VCM", min.cells = 3, min.features = 200)
D20_VCM@meta.data$Conditions <- "Immature hiPSC-CMs"
D32_IM_VCM <- Read10X(data.dir= "/home/bryanl/scratch/scRNA_meta/Funakoshi/D32_IM_VCM/")
D32_IM_VCM <- CreateSeuratObject(counts = D32_IM_VCM, project = "D32_IM_VCM", min.cells = 3, min.features = 200)
D32_IM_VCM@meta.data$Conditions <- "Immature hiPSC-CMs"
D32_MAT_VCM <- Read10X(data.dir= "/home/bryanl/scratch/scRNA_meta/Funakoshi/D32_MAT_VCM/")
D32_MAT_VCM <- CreateSeuratObject(counts = D32_MAT_VCM, project = "D32_MAT_VCM", min.cells = 3, min.features = 200)
D32_MAT_VCM@meta.data$Conditions <- "Mature hiPSC-CMs"
tmp <- merge(D20_VCM, D32_IM_VCM)
Funakoshi <- merge(tmp, D32_MAT_VCM)
Funakoshi@meta.data$Sex <- "Undefined"
Funakoshi@meta.data$Dataset <- "Funakoshi et al."
qsave(Funakoshi, "/home/bryanl/scratch/scRNA_meta/Funakoshi/Funakoshi_iPSC-CMs.qs")

# Grancharova et al.

load("/home/bryanl/scratch/scRNA_meta/Grancharova/protocol1_D0_D12_D24_D90/seurat_object/D0_D12_D24_D90_paper_figures.RData")
cardio <- UpdateSeuratObject(cardio)
Grancharova_1 <- cardio
load("/home/bryanl/scratch/scRNA_meta/Grancharova/reproducibility_D12_D14_D24_D26/seurat_object/reproducibility_D12_D14_D24_D26_paper_figures.RData")
cardio <- UpdateSeuratObject(cardio)
Grancharova_2 <- cardio
Grancharova <- merge(Grancharova_1, Grancharova_2)
Grancharova@meta.data$Dataset <- "Grancharova et al."
Grancharova@meta.data$Sex <- "Undefined"
Grancharova@meta.data$Conditions[Grancharova@meta.data$day == "D0"] <- "Immature hiPSC-CMs"
Grancharova@meta.data$Conditions[Grancharova@meta.data$day == "D12"] <- "Immature hiPSC-CMs"
Grancharova@meta.data$Conditions[Grancharova@meta.data$day == "D14"] <- "Immature hiPSC-CMs"
Grancharova@meta.data$Conditions[Grancharova@meta.data$day == "D24"] <- "Immature hiPSC-CMs"
Grancharova@meta.data$Conditions[Grancharova@meta.data$day == "D26"] <- "Immature hiPSC-CMs"
Grancharova@meta.data$Conditions[Grancharova@meta.data$day == "D93"] <- "Mature hiPSC-CMs"
Grancharova@meta.data$Conditions[Grancharova@meta.data$day == "D96"] <- "Mature hiPSC-CMs"
qsave(Grancharova, "/home/bryanl/scratch/scRNA_meta/Grancharova/Grancharova.qs")

# Koenig et al. 

load("/home/bryanl/scratch/scRNA_meta/Koenig/GSE183852_DCM_Integrated.Robj")
Koenig <- RefMerge
Koenig_CMs <- subset(Koenig, subset = Names == "Cardiomyocytes")
Koenig_CMs@meta.data$Dataset <- "Koenig et al." 
Koenig_CMs@meta.data$Conditions[Koenig_CMs@meta.data$condition == "Donor"] <- "Healthy CMs"
Koenig_CMs@meta.data$Conditions[Koenig_CMs@meta.data$condition == "DCM"] <- "DCM CMs"
DefaultAssay(Koenig) <- "RNA"  
Koenig[["SCT"]] <- NULL
Koenig <- Koenig_CMs 
qsave(Koenig, "/home/bryanl/scratch/scRNA_meta/Koenig/Koenig_CMs.qs")

# Li et al.  

Homo_ips_0 <- Read10X(data.dir= "/home/bryanl/scratch/scRNA_meta/Li/Homo_ips_0")
Homo_ips_0 <- CreateSeuratObject(counts = Homo_ips_0, project = "Homo_ips_0", min.cells = 3, min.features = 200)
Homo_ips_1 <- Read10X(data.dir= "/home/bryanl/scratch/scRNA_meta/Li/Homo_ips_1")
Homo_ips_1 <- CreateSeuratObject(counts = Homo_ips_1, project = "Homo_ips_1", min.cells = 3, min.features = 200)
Homo_ips_2 <- Read10X(data.dir= "/home/bryanl/scratch/scRNA_meta/Li/Homo_ips_2")
Homo_ips_2 <- CreateSeuratObject(counts = Homo_ips_2, project = "Homo_ips_2", min.cells = 3, min.features = 200)
Homo_ips_3 <- Read10X(data.dir= "/home/bryanl/scratch/scRNA_meta/Li/Homo_ips_3")
Homo_ips_3 <- CreateSeuratObject(counts = Homo_ips_3, project = "Homo_ips_3", min.cells = 3, min.features = 200)
tmp <- merge(Homo_ips_0, Homo_ips_1)
tmp2 <- merge(Homo_ips_2, Homo_ips_3)
Li <- merge(tmp, tmp2)
Li@meta.data$Dataset <- "Li et al."
Li@meta.data$Sex <- "Undefined"
Li@meta.data$Conditions <- "Immature hiPSC-CMs"
qsave(Li, "/home/bryanl/scratch/scRNA_meta/Li/Li_iPSC-CMs.qs")

# Simonson et al.

Simonson <- Read10X(data.dir= "/home/bryanl/scratch/scRNA_meta/Simonson/SCP1849/expression/628cf91a771a5b02c35d0ba3")
Simonson <- CreateSeuratObject(counts = Simonson, project = "Simonson", min.cells = 3, min.features = 200)
metadata_Simonson <- read.delim("/home/bryanl/scratch/scRNA_meta/Simonson/SCP1849/metadata/ICM_MetaData_V1.txt")
metadata_Simonson <- metadata_Simonson[-1, ]
rownames(metadata_Simonson) <- metadata_Simonson$NAME
metadata_Simonson$NAME <- NULL
Simonson <- AddMetaData(Simonson, metadata = metadata_Simonson)
Simonson_CMs <- subset(Simonson, subset = cell_type__ontology_label == "cardiac muscle cell")
Simonson_CMs@meta.data$Dataset <- "Simonson et al."
Simonson_CMs@meta.data$Sex[Simonson_CMs@meta.data$sex == "male"] <- "Male"
Simonson_CMs@meta.data$Sex[Simonson_CMs@meta.data$sex == "female"] <- "Female"
Simonson_CMs@meta.data$Conditions[Simonson_CMs@meta.data$disease__ontology_label == "normal"] <- "Healthy CMs"
Simonson_CMs@meta.data$Conditions[Simonson_CMs@meta.data$disease__ontology_label == "cardiomyopathy"] <- "ICM CMs"
qsave(Simonson_CMs, "/home/bryanl/scratch/scRNA_meta/Simonson/Simonson_CMs.qs")

# Zhang et al.

CMs_2D <- Read10X(data.dir = "/home/bryanl/scratch/scRNA_meta/Zhang/2D_CM")
CMs_2D <- CreateSeuratObject(counts = CMs_2D, project = "2D_CMs", min.cells = 3, min.features = 200)
MCO_CM <- Read10X(data.dir = "/home/bryanl/scratch/scRNA_meta/Zhang/MCO_CM/")
MCO_CM <- CreateSeuratObject(counts = MCO_CM, project = "MCO_CM", min.cells = 3, min.features = 200)
MCO_MIX <- Read10X(data.dir = "/home/bryanl/scratch/scRNA_meta/Zhang/MCO_MIX")
MCO_MIX <- CreateSeuratObject(counts = MCO_MIX, project = "MCO_MIX", min.cells = 3, min.features = 200)
CMs_2D@meta.data$Conditions <- "Immature hiPSC-CMs"
MCO_CM@meta.data$Conditions <- "Immature hiPSC-CM derived Organoids"
MCO_MIX@meta.data$Conditions <- "Mature hiPSC-CM derived Organoids"
tmp <- merge(CMs_2D, MCO_CM)
Zhang <- merge(tmp, MCO_MIX)
Zhang@meta.data$Dataset <- "Zhang et al."
Zhang@meta.data$Sex <- "Undefined"
qsave(Zhang, "/home/bryanl/scratch/scRNA_meta/Zhang/Zhang.qs")

# Generating QC Figures 

Chaffin@meta.data$Type <- "Nuclei" 
Feng@meta.data$Type <- "Cell"
Funakoshi@meta.data$Type <- "Cell"
Grancharova@meta.data$Type <- "Cell"
Koenig@meta.data$Type[Koenig@meta.data$tech == "SN"] <- "Nuclei"
Koenig@meta.data$Type[Koenig@meta.data$tech == "SC"] <- "Cell"
Li@meta.data$Type <- "Cell"
Simonson@meta.data$Type <- "Nuclei"
Zhang@meta.data$Type <- "Cell" 

tmp <- merge(Chaffin, Feng)
tmp2 <- merge(Funakoshi, Grancharova)
tmp3 <- merge(Koenig, Li)
tmp4 <- merge(Simonson, Zhang)
tmp5 <- merge(tmp, tmp2)
tmp6 <- merge(tmp3, tmp4)
QC_figs <- merge(tmp5, tmp6)

table(QC_figs@meta.data$Dataset, QC_figs@meta.data$Type)
table(QC_figs@meta.data$Dataset, QC_figs@meta.data$Conditions)
table(QC_figs@meta.data$Dataset, QC_figs@meta.data$Sex)

qsave(QC_figs, "/home/bryanl/scratch/scRNA_meta/QC_figs.qs")

## Quality Control

Chaffin[["percent.mt"]] <- PercentageFeatureSet(Chaffin, pattern = "^MT-")
Feng[["percent.mt"]] <- PercentageFeatureSet(Feng, pattern = "^MT-")
Funakoshi[["percent.mt"]] <- PercentageFeatureSet(Funakoshi, pattern = "^MT-")
Grancharova[["percent.mt"]] <- PercentageFeatureSet(Grancharova, pattern = "^MT-")
Koenig[["percent.mt"]] <- PercentageFeatureSet(Koenig, pattern = "^MT-")
Li[["percent.mt"]] <- PercentageFeatureSet(Li, pattern = "^MT-")
Simonson[["percent.mt"]] <- PercentageFeatureSet(Simonson, pattern = "^MT-")
Zhang[["percent.mt"]] <- PercentageFeatureSet(Zhang, pattern = "^MT-")

# QC Metrics Filtering

VlnPlot(Chaffin, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Chaffin <- subset(Chaffin, subset = nFeature_RNA > 200 & nFeature_RNA < 8000)

VlnPlot(Feng, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Feng <- subset(Feng, subset = nFeature_RNA > 200 & nFeature_RNA < 6000 & percent.mt < 25)

D20_VCM <- subset(Funakoshi, idents = c("D20_VCM"))
VlnPlot(D20_VCM, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
D20_VCM <- subset(D20_VCM, subset = nFeature_RNA > 200 & nFeature_RNA < 5750 & percent.mt < 20)

D32_IM_VCM<- subset(Funakoshi, idents = c("D32_IM_VCM"))
VlnPlot(D32_IM_VCM, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
D32_IM_VCM <- subset(D32_IM_VCM, subset = nFeature_RNA > 200 & nFeature_RNA < 5000 & percent.mt < 30)

D32_MAT_VCM <- subset(Funakoshi, idents = c("D32_MAT_VCM"))
VlnPlot(D32_MAT_VCM, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
D32_MAT_VCM <- subset(D32_MAT_VCM, subset = nFeature_RNA > 200 & nFeature_RNA < 4000 & percent.mt < 75)

Grancharova_1 <- subset(Grancharova, idents = c("1"))
VlnPlot(Grancharova_1, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_1 <- subset(Grancharova_1, subset = nFeature_RNA > 200 & percent.mt < 20)

Grancharova_2 <- subset(Grancharova, idents = c("2"))
VlnPlot(Grancharova_2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_2 <- subset(Grancharova_2, subset = nFeature_RNA > 200 & nFeature_RNA < 5000)

Grancharova_3 <- subset(Grancharova, idents = c("3"))
VlnPlot(Grancharova_3, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_3 <- subset(Grancharova_3, subset = nFeature_RNA > 200 & nFeature_RNA < 5000)

Grancharova_4 <- subset(Grancharova, idents = c("4"))
VlnPlot(Grancharova_4, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_4 <- subset(Grancharova_4, subset = nFeature_RNA > 200 & nFeature_RNA < 5000)

Grancharova_5 <- subset(Grancharova, idents = c("5"))
VlnPlot(Grancharova_5, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_5 <- subset(Grancharova_5, subset = nFeature_RNA > 200 & nFeature_RNA < 5000 & percent.mt < 20)

Grancharova_6 <- subset(Grancharova, idents = c("6"))
VlnPlot(Grancharova_6, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_6 <- subset(Grancharova_6, subset = nFeature_RNA > 200 & nFeature_RNA < 5500)

Grancharova_7 <- subset(Grancharova, idents = c("7"))
VlnPlot(Grancharova_7, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_7 <- subset(Grancharova_7, subset = nFeature_RNA > 200 & nFeature_RNA < 5500)

Grancharova_8 <- subset(Grancharova, idents = c("8"))
VlnPlot(Grancharova_8, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_8 <- subset(Grancharova_8, subset = nFeature_RNA > 200 & nFeature_RNA < 5000 & percent.mt < 20)

Grancharova_9 <- subset(Grancharova, idents = c("9"))
VlnPlot(Grancharova_9, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_9 <- subset(Grancharova_9, subset = nFeature_RNA > 200 & nFeature_RNA < 6000 & percent.mt < 10)

Grancharova_10 <- subset(Grancharova, idents = c("10"))
VlnPlot(Grancharova_10, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_10 <- subset(Grancharova_10, subset = nFeature_RNA > 200 & nFeature_RNA < 5000 & percent.mt < 15)

Grancharova_11 <- subset(Grancharova, idents = c("11"))
VlnPlot(Grancharova_11, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_11 <- subset(Grancharova_11, subset = nFeature_RNA > 200 & nFeature_RNA < 5000 & percent.mt < 15)

Grancharova_12 <- subset(Grancharova, idents = c("12"))
VlnPlot(Grancharova_12, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_12 <- subset(Grancharova_12, subset = nFeature_RNA > 200 & percent.mt < 13)

Grancharova_13 <- subset(Grancharova, idents = c("13"))
VlnPlot(Grancharova_13, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_13 <- subset(Grancharova_13, subset = nFeature_RNA > 200 & nFeature_RNA < 5750 & percent.mt < 15)

Grancharova_14 <- subset(Grancharova, idents = c("14"))
VlnPlot(Grancharova_14, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_14 <- subset(Grancharova_14, subset = nFeature_RNA > 200 & nFeature_RNA < 5750 & percent.mt < 20)

Grancharova_15 <- subset(Grancharova, idents = c("15"))
VlnPlot(Grancharova_15, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Grancharova_15 <- subset(Grancharova_15, subset = nFeature_RNA > 200 & percent.mt < 15)

VlnPlot(Koenig, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Koenig <- subset(Koenig, subset = nFeature_RNA > 200 & nFeature_RNA < 3700 & percent.mt < 5)

Homo_ips_0 <- subset(Li, idents = c("Homo_ips_0"))
VlnPlot(Homo_ips_0, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Homo_ips_0 <- subset(Homo_ips_0, subset = nFeature_RNA > 200 & nFeature_RNA < 6000 & percent.mt < 10)

Homo_ips_1 <- subset(Li, idents = c("Homo_ips_1"))
VlnPlot(Homo_ips_1, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Homo_ips_1 <- subset(Homo_ips_1, subset = nFeature_RNA > 200 & nFeature_RNA < 7500 & percent.mt < 20)

Homo_ips_2 <- subset(Li, idents = c("Homo_ips_2"))
VlnPlot(Homo_ips_2, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Homo_ips_2 <- subset(Homo_ips_2, subset = nFeature_RNA > 200 & nFeature_RNA < 7500 & percent.mt < 15)

Homo_ips_3 <- subset(Li, idents = c("Homo_ips_3"))
VlnPlot(Homo_ips_3, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Homo_ips_3 <- subset(Homo_ips_3, subset = nFeature_RNA > 200 & nFeature_RNA < 7500 & percent.mt < 20)

VlnPlot(Simonson, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
Simonson <- subset(Simonson, subset = nFeature_RNA > 200 & nFeature_RNA < 5000 & percent.mt < 5)

CMs_2D <- subset(Zhang, idents = c("2D_CMs"))
VlnPlot(CMs_2D, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
CMs_2D <- subset(CMs_2D, subset = nFeature_RNA > 200 & nFeature_RNA < 6250 & percent.mt < 15)

MCO_CM <- subset(Zhang, idents = c("MCO_CM"))
VlnPlot(MCO_CM, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
MCO_CM <- subset(MCO_CM, subset = nFeature_RNA > 200 & nFeature_RNA < 6000 & percent.mt < 25)

MCO_MIX <- subset(Zhang, idents = c("MCO_MIX"))
VlnPlot(MCO_MIX, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
MCO_MIX <- subset(MCO_MIX, subset = nFeature_RNA > 200 & nFeature_RNA < 6000 & percent.mt < 20)

# Generating QC Figures After QC Filtering 

tmp <- merge(D20_VCM, D32_IM_VCM)
Funakoshi <- merge(tmp, D32_MAT_VCM)
qsave(Funakoshi, "/home/bryanl/scratch/scRNA_meta/Funakoshi/Funakoshi_iPSC-CMs.qs")

tmp <- merge(Grancharova_1, Grancharova_2)
tmp_2 <- merge(Grancharova_3, Grancharova_4)
tmp_3 <- merge(Grancharova_5, Grancharova_6)
tmp_4 <- merge(Grancharova_7, Grancharova_7)
tmp_5 <- merge(Grancharova_8, Grancharova_9)
tmp_6 <- merge(Grancharova_10, Grancharova_11)
tmp_7 <- merge(Grancharova_12, Grancharova_13)
tmp_8 <- merge(Grancharova_14, Grancharova_15)
tmpe <- merge(tmp, tmp_2)
tmpe_2 <- merge(tmp_3, tmp_4)
tmpe_3 <- merge(tmp_5, tmp_6)
tmpe_4 <- merge(tmp_7, tmp_8)
tmp <- merge(tmpe, tmpe_2)
tmp_2 <- merge(tmp_3, tmp_4)
Grancharova <- merge(tmp, tmp_2)
qsave(Grancharova, "/home/bryanl/scratch/scRNA_meta/Grancharova/Grancharova.qs")

tmp <- merge(Homo_ips_0, Homo_ips_1)
tmp2 <- merge(Homo_ips_2, Homo_ips_3)
Li <- merge(tmp, tmp2)
qsave(Li, "/home/bryanl/scratch/scRNA_meta/Li/Li_iPSC-CMs.qs")

tmp <- merge(CMs_2D, MCO_CM)
Zhang <- merge(tmp, MCO_MIX)
qsave(Zhang, "/home/bryanl/scratch/scRNA_meta/Zhang/Zhang.qs")

tmp <- merge(Chaffin, Feng)
tmp2 <- merge(Funakoshi, Grancharova)
tmp3 <- merge(Koenig, Li)
tmp4 <- merge(Simonson, Zhang)
tmp5 <- merge(tmp, tmp2)
tmp6 <- merge(tmp3, tmp4)
QC_figs_filtered <- merge(tmp5, tmp6)

table(QC_figs_filtered@meta.data$Dataset, QC_figs_filtered@meta.data$Type)
table(QC_figs_filtered@meta.data$Dataset, QC_figs_filtered@meta.data$Conditions)
table(QC_figs_filtered@meta.data$Dataset, QC_figs_filtered@meta.data$Sex)

qsave(QC_figs_filtered, "/home/bryanl/scratch/scRNA_meta/QC_figs_filtered.qs")

## Normalization

Chaffin <- qread("/home/bryanl/scratch/scRNA_meta/Chaffin/Chaffin_CMs.qs")
Feng <- qread("/home/bryanl/scratch/scRNA_meta/Feng/Feng_Organoids.qs")
Koenig <- qread("/home/bryanl/scratch/scRNA_meta/Koenig/Koenig_CMs.qs")
Simonson <- qread("/home/bryanl/scratch/scRNA_meta/Simonson/Simonson_CMs.qs")

# Chaffin et al.

Chaffin <- SCTransform(Chaffin, vars.to.regress = "percent.mt", verbose = FALSE)

# Feng et al. 

# Funakoshi et al. 


## Doublet Finder

## Merging, Downsampling and Integration

## Cardiomyocyte Identification and Annotation

## Pseudobulk Generation



